using Il2CppExitGames.Client.Photon;
using Il2CppPhoton.Pun;
using Il2CppPhoton.Realtime;
using Il2CppRUMBLE.MoveSystem;
using Il2CppTMPro;
using MelonLoader;
using RumbleModdingAPI;
using RumbleModUI;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using UnityEngine;

namespace CustomMultiplayerMaps
{
    public static class ModBuildInfo
    {
        public const string Version = "1.2.0";
    }

    public class main : MelonMod
    {
        string currentScene = "";
        byte myEventCode = 69;
        byte myEventCode2 = 70;
        private static RaiseEventOptions eventOptions = new RaiseEventOptions() { Receivers = ReceiverGroup.Others, CachingOption = EventCaching.AddToRoomCache };
        private static RaiseEventOptions eventOptions2 = new RaiseEventOptions() { Receivers = ReceiverGroup.All, CachingOption = EventCaching.AddToRoomCache }; // ReceiverGroup.Others for only others | ReceiverGroup.All for everyone
        private System.Random random = new System.Random();
        private bool initialized = false;
        private bool enabled = true;
        private int mapNumber;
        UI UI = UI.instance;
        private Mod CustomMultiplayerMaps = new Mod();
        private GameObject mapsParent;
        private string customMapFile;
        private bool EventSent = false;

        private void Log(string msg)
        {
            MelonLogger.Msg(msg);
        }

        private void Error(string msg)
        {
            MelonLogger.Error(msg);
        }

        public override void OnLateInitializeMelon()
        {
            CustomMultiplayerMaps.ModName = "CustomMultiplayerMaps";
            CustomMultiplayerMaps.ModVersion = ModBuildInfo.Version;
            CustomMultiplayerMaps.SetFolder("CustomMultiplayerMaps");
            CustomMultiplayerMaps.AddToList("Enabled", true, 0, "Enabled or Disabled Mod", new Tags { });
            CustomMultiplayerMaps.AddToList("Use CustomMap File", false, 0, "Enabled or Disabled Custom Map", new Tags { });
            CustomMultiplayerMaps.AddToList("CustomMap File Name", "CustomMap.txt", "Reads from this Map File Custom Map", new Tags { });
            CustomMultiplayerMaps.AddToList("FlatLand", true, 0, "Enabled or Disabled FlatLand Map -By UlvakSkillz", new Tags { });
            CustomMultiplayerMaps.AddToList("The Cliff", true, 0, "Enabled or Disabled The Cliff Map -By SDRAWKCABMIAY", new Tags { });
            CustomMultiplayerMaps.AddToList("King Of The Throne", true, 0, "Enabled or Disabled King Of The Throne Map -By LMSparrow", new Tags { });
            CustomMultiplayerMaps.AddToList("Agni Kai", true, 0, "Enabled or Disabled Agni Kai Map -By UlvakSkillz", new Tags { });
            CustomMultiplayerMaps.AddToList("Pro Bending Arena", true, 0, "Enabled or Disabled Pro Bending Arena Map -By ERROR", new Tags { });
            CustomMultiplayerMaps.AddToList("Red vs Blue", true, 0, "Enabled or Disabled Red vs Blue Map  -By UlvakSkillz", new Tags { });
            CustomMultiplayerMaps.AddToList("Red Woods", true, 0, "Enabled or Disabled Red Woods Map -By CRWND", new Tags { });
            CustomMultiplayerMaps.AddToList("Sprinkle Donut", true, 0, "Enabled or Disabled Sprinkle Donut Map -By SDRAWKCABMIAY", new Tags { });
            CustomMultiplayerMaps.GetFromFile();
            CustomMultiplayerMaps.ModSaved += Save;
            UI.instance.UI_Initialized += UIInit;
            enabled = (bool)CustomMultiplayerMaps.Settings[0].SavedValue;
            customMapFile = (string)CustomMultiplayerMaps.Settings[2].SavedValue;
        }

        private void Save()
        {
            enabled = (bool)CustomMultiplayerMaps.Settings[0].SavedValue;
            customMapFile = (string)CustomMultiplayerMaps.Settings[2].SavedValue;
        }

        private void UIInit()
        {
            UI.AddMod(CustomMultiplayerMaps);
        }

        public void OnEvent(EventData eventData)
        {
            if (enabled && (eventData.Code == myEventCode))
            {
                string recievedString = eventData.CustomData.ToString();
                string[] processedString = recievedString.Split('|');
                MelonLogger.Msg("69 - in: " + eventData.CustomData.ToString()); // make sure to use CustomData
                if (processedString[0] == ModBuildInfo.Version)
                {
                    ProcessEventCode69(processedString);
                }
            }
            else if (eventData.Code == myEventCode2)
            {
                string recievedString = eventData.CustomData.ToString();
                string[] processedString = recievedString.Split('|');
                MelonLogger.Msg("70 - in: " + eventData.CustomData.ToString()); // make sure to use CustomData
                ProcessEventCode70(processedString);
            }
        }

        private void ProcessEventCode69(string[] processedString)
        {
            if ((processedString[1] == "1") && ((bool)CustomMultiplayerMaps.Settings[1].SavedValue == true))
            {
                try
                {
                    string[] fileText = File.ReadAllLines(@"UserData\CustomMultiplayerMaps\Maps\" + customMapFile);
                    string sentString = "1";
                    foreach (string text in fileText)
                    {
                        sentString += "|" + text;
                    }
                    PhotonNetwork.RaiseEvent(myEventCode2, sentString, eventOptions2, SendOptions.SendReliable);
                }
                catch
                {
                    Error("Failed to read Custom Map: " + customMapFile);
                    string selectedMap = "0|" + SelectRandomMap(processedString[2]);
                    if (selectedMap != "0|-1")
                    {
                        PhotonNetwork.RaiseEvent(myEventCode2, selectedMap, eventOptions2, SendOptions.SendReliable); // sends enabled with the event code of 70
                    }
                }
            }
            else
            {
                string selectedMap = "0|" + SelectRandomMap(processedString[2]);
                if (selectedMap != "0|-1")
                {
                    PhotonNetwork.RaiseEvent(myEventCode2, selectedMap, eventOptions2, SendOptions.SendReliable); // sends enabled with the event code of 70
                }
            }
        }

        private void ProcessEventCode70(string[] processedString)
        {
            if (processedString[0] == "1")
            {
                LoadCustomMap(processedString);
            }
            else
            {
                mapNumber = int.Parse(processedString[1]);
                //load selected map
                mapsParent.transform.GetChild(mapNumber).gameObject.SetActive(true);
            }
            //unload current map
            if (currentScene == "Map0")
            {
                UnLoadMap0();
            }
            else if (currentScene == "Map1")
            {
                UnLoadMap1();
            }
        }

        private void TestCustomMap()
        {
            try
            {
                string[] fileText = File.ReadAllLines(@"UserData\CustomMultiplayerMaps\Maps\" + customMapFile);
                string sentString = "1";
                foreach (string text in fileText)
                {
                    sentString += "|" + text;
                }
                string recievedString = sentString;
                string[] processedString = recievedString.Split('|');
                MelonLogger.Msg("Test - in: " + recievedString);
                if (processedString[0] == "1")
                {
                    LoadCustomMap(processedString);
                }
                else
                {
                    mapNumber = int.Parse(processedString[1]);
                    //load selected map
                    mapsParent.transform.GetChild(mapNumber).gameObject.SetActive(true);
                }
                //unload current map
                if (currentScene == "Map0")
                {
                    UnLoadMap0();
                }
                else if (currentScene == "Map1")
                {
                    UnLoadMap1();
                }
            }
            catch
            {
                Error("Failed to Read Custom Map: " + customMapFile);
            }
        }

        private string SelectRandomMap(string opponentsMaps)
        {
            string myMaps = GetEnabledMapsString();
            List<int> availableMaps = new List<int>();
            for (int i = 0; i < opponentsMaps.Length; i++)
            {
                if ((myMaps.Substring(i, 1) == "1") && (opponentsMaps.Substring(i, 1) == "1"))
                {
                    availableMaps.Add(i);
                }
            }
            if (availableMaps.Count == 0)
            {
                return "-1";
            }
            return availableMaps[random.Next(0, availableMaps.Count)].ToString();
        }

        public override void OnSceneWasLoaded(int buildIndex, string sceneName)
        {
            currentScene = sceneName;
            EventSent = false;
            if (!initialized && (currentScene == "Gym"))
            {
                PhotonNetwork.NetworkingClient.EventReceived += (Action<EventData>)OnEvent;
                Calls.onMapInitialized += SceneInit;
                mapsParent = new GameObject();
                mapsParent.name = "CustomMultiplayerMaps";
                GameObject.DontDestroyOnLoad(mapsParent);
            }
            else if (initialized)
            {
                for (int i = 0; i < mapsParent.transform.childCount; i++)
                {
                    mapsParent.transform.GetChild(i).gameObject.SetActive(false);
                }
            }
        }

        private void SceneInit()
        {
            if (!initialized)
            {
                PreLoadMaps();
                initialized = true;
                Log("Initialized");
            }
            if (enabled && !EventSent && (!PhotonNetwork.IsMasterClient) && ((currentScene == "Map0") || (currentScene == "Map1")))
            {
                EventSent = true;
                string useCustom;
                if ((bool)CustomMultiplayerMaps.Settings[1].SavedValue)
                {
                    useCustom = "1";
                }
                else
                {
                    useCustom = "0";
                }
                PhotonNetwork.RaiseEvent(myEventCode, ModBuildInfo.Version + "|" + useCustom + "|" + GetEnabledMapsString(), eventOptions, SendOptions.SendReliable); // sends randomMap all other players with the event code of 69
            }
            /*if ((currentScene == "Map0") || (currentScene == "Map1"))
            {
                TestCustomMap();
            }*/
        }

        private string GetEnabledMapsString()
        {
            string returnString = "";
            for (int i = 3; i < CustomMultiplayerMaps.Settings.Count; i++)
            {
                if ((bool)CustomMultiplayerMaps.Settings[i].SavedValue)
                {
                    returnString += "1";
                }
                else
                {
                    returnString += "0";
                }
            }
            return returnString;
        }

        private void UnLoadMap0()
        {
            Calls.GameObjects.Map0.Map0Production.GetGameObject().SetActive(false);
        }

        private void UnLoadMap1()
        {
            Calls.GameObjects.Map1.Map1Production.GetGameObject().SetActive(false);
            Calls.GameObjects.Map1.Logic.SceneProcessors.GetGameObject().SetActive(false);
        }

        private void PreLoadMaps()
        {
            LoadFlatLand();
            Log("Loaded FlatLand By UlvakSkillz");
            LoadTheCliff();
            Log("Loaded The Cliff By SDRAWKCABMIAY");
            LoadKingOfTheThrone();
            Log("Loaded King of the Throne By LMSparrow");
            LoadAgniKai();
            Log("Loaded Agni Kai By UlvakSkillz");
            LoadProBendingArena();
            Log("Loaded Pro Bending Arena By ERROR");
            LoadRedVsBlue();
            Log("Loaded Red vs Blue By UlvakSkillz");
            LoadRedWoods();
            Log("Loaded Red Woods By CRWND");
            LoadSprinkleDonut();
            Log("Loaded Sprinkle Donut By SDRAWKCABMIAY");
        }

        private void LoadCustomMap(string[] recievedText)
        {
            Log("Creating Custom Map");
            GameObject mapParent = new GameObject();
            mapParent.name = "CustomMapParent";
            MeshCollider meshCollider;
            GroundCollider groundCollider;
            Shader urp = Shader.Find("Universal Render Pipeline/Lit");
            int childCount = int.Parse(recievedText[1]);
            for (int i = 0; i < childCount; i++)
            {
                string primitiveName = recievedText[13 * i + 2];
                float r = float.Parse(recievedText[13 * i + 3], CultureInfo.InvariantCulture);
                float g = float.Parse(recievedText[13 * i + 4], CultureInfo.InvariantCulture);
                float b = float.Parse(recievedText[13 * i + 5], CultureInfo.InvariantCulture);
                float posX = float.Parse(recievedText[13 * i + 6], CultureInfo.InvariantCulture);
                float posY = float.Parse(recievedText[13 * i + 7], CultureInfo.InvariantCulture);
                float posZ = float.Parse(recievedText[13 * i + 8], CultureInfo.InvariantCulture);
                float rotX = float.Parse(recievedText[13 * i + 9], CultureInfo.InvariantCulture);
                float rotY = float.Parse(recievedText[13 * i + 10], CultureInfo.InvariantCulture);
                float rotZ = float.Parse(recievedText[13 * i + 11], CultureInfo.InvariantCulture);
                float scaleX = float.Parse(recievedText[13 * i + 12], CultureInfo.InvariantCulture);
                float scaleY = float.Parse(recievedText[13 * i + 13], CultureInfo.InvariantCulture);
                float scaleZ = float.Parse(recievedText[13 * i + 14], CultureInfo.InvariantCulture);
                PrimitiveType type = PrimitiveType.Cube;
                if (primitiveName.Contains("Capsule"))
                {
                    type = PrimitiveType.Capsule;
                }
                else if (primitiveName.Contains("Cylinder"))
                {
                    type = PrimitiveType.Cylinder;
                }
                else if (primitiveName.Contains("Plane"))
                {
                    type = PrimitiveType.Plane;
                }
                else if (primitiveName.Contains("Quad"))
                {
                    type = PrimitiveType.Quad;
                }
                else if (primitiveName.Contains("Sphere"))
                {
                    type = PrimitiveType.Sphere;
                }
                GameObject shape = GameObject.CreatePrimitive(type);
                shape.name = primitiveName;
                if (type == PrimitiveType.Cube)
                {
                    Component.Destroy(shape.GetComponent<BoxCollider>());
                }
                else if ((type == PrimitiveType.Capsule) || (type == PrimitiveType.Cylinder))
                {
                    Component.Destroy(shape.GetComponent<CapsuleCollider>());
                }
                else if (type == PrimitiveType.Sphere)
                {
                    Component.Destroy(shape.GetComponent<SphereCollider>());
                }
                if (primitiveName.ToLower().Contains("wall"))
                {
                    shape.AddComponent<BoxCollider>();
                }
                if (primitiveName.ToLower().Contains("invisible"))
                {
                    Component.Destroy(shape.GetComponent<MeshRenderer>());
                }
                else
                {
                    shape.GetComponent<Renderer>().material.shader = urp;
                    shape.GetComponent<Renderer>().material.color = new Color(r, g, b);
                }
                if (primitiveName.ToLower().Contains("environment"))
                {
                    shape.layer = 10;
                }
                else
                {
                    shape.layer = 9;
                }
                shape.transform.parent = mapParent.transform;
                shape.transform.position = new Vector3(posX, posY, posZ);
                shape.transform.rotation = Quaternion.Euler(rotX, rotY, rotZ);
                shape.transform.localScale = new Vector3(scaleX, scaleY, scaleZ);
                if ((type == PrimitiveType.Plane) || (type == PrimitiveType.Quad))
                {
                    meshCollider = shape.GetComponent<MeshCollider>();
                }
                else
                {
                    meshCollider = shape.AddComponent<MeshCollider>();
                }
                groundCollider = shape.AddComponent<GroundCollider>();
                groundCollider.isMainGroundCollider = true;
                groundCollider.collider = meshCollider;
            }
            Log("CustomMap Created");
        }

        //By UlvakSkillz
        private void LoadFlatLand()
        {
            int size = 54;
            Shader urp = Shader.Find("Universal Render Pipeline/Lit");
            GameObject mapParent = new GameObject();
            mapParent.name = "FlatLand";
            mapParent.transform.parent = mapsParent.transform;
            GameObject plane = GameObject.CreatePrimitive(PrimitiveType.Cube);
            plane.name = "Floor";
            plane.transform.parent = mapParent.transform;
            plane.transform.localScale = new Vector3(size, 0.01f, size);
            plane.transform.position = new Vector3(0f, 0, 0f);
            plane.layer = 9;
            Component.Destroy(plane.GetComponent<BoxCollider>());
            plane.GetComponent<Renderer>().material.shader = urp;
            plane.GetComponent<Renderer>().material.color = new Color(1, 1, 1);
            MeshCollider meshCollider = plane.AddComponent<MeshCollider>();
            GroundCollider groundCollider = plane.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            GameObject measureParent = new GameObject();
            measureParent.name = "Measurements";
            measureParent.transform.position = new Vector3(0, 0, 0);
            measureParent.transform.parent = mapParent.transform;
            for (int x = 0; x <= 1; x++)
            {
                for (int i = -size / 2; i <= size / 2; i++)
                {
                    GameObject measure = GameObject.CreatePrimitive(PrimitiveType.Cube);
                    measure.name = "MeasureLine";
                    Component.Destroy(measure.GetComponent<BoxCollider>());
                    measure.GetComponent<Renderer>().material.shader = urp;
                    measure.GetComponent<Renderer>().material.color = new Color(0, 0, 0);
                    measure.transform.parent = measureParent.transform;
                    measure.transform.localScale = new Vector3(0.01f, 0.0101f, size);
                    if (x == 0)
                    {
                        measure.transform.position = new Vector3(i, 0, 0f);
                        if ((i % 5 == 0) && (i != 0))
                        {
                            GameObject iText = Calls.Create.NewText();
                            iText.GetComponent<TextMeshPro>().enableWordWrapping = false;
                            iText.GetComponent<TextMeshPro>().text = Mathf.Abs(i).ToString();
                            iText.GetComponent<TextMeshPro>().fontSize = 10;
                            iText.transform.parent = measureParent.transform;
                            iText.transform.position = new Vector3(i, 0.5f, 0f);
                            if (i < 0)
                            {
                                iText.transform.rotation = Quaternion.Euler(0, -90, 0);
                            }
                            else
                            {
                                iText.transform.rotation = Quaternion.Euler(0, 90, 0);
                            }
                        }
                    }
                    else
                    {
                        measure.transform.position = new Vector3(0f, 0, i);
                        measure.transform.localRotation = Quaternion.Euler(0, 90, 0);
                        if ((i % 5 == 0) && (i != 0))
                        {
                            GameObject iText = Calls.Create.NewText();
                            iText.name = "MeasureNumber";
                            iText.GetComponent<TextMeshPro>().enableWordWrapping = false;
                            iText.GetComponent<TextMeshPro>().text = Mathf.Abs(i).ToString();
                            iText.GetComponent<TextMeshPro>().fontSize = 10;
                            iText.transform.parent = measureParent.transform;
                            iText.transform.position = new Vector3(0f, 0.5f, i);
                            if (i < 0)
                            {
                                iText.transform.rotation = Quaternion.Euler(0, 180, 0);
                            }
                        }
                    }
                }
            }
            mapParent.transform.position = new Vector3(0, -0.2f, 0);
            mapParent.SetActive(false);
        }

        //By SDRAWKCABMIAY
        private void LoadTheCliff()
        {
            GameObject mapParent = new GameObject();
            mapParent.name = "The Cliff";
            mapParent.transform.parent = mapsParent.transform;
            MeshCollider meshCollider;
            GroundCollider groundCollider;
            Shader urp = Shader.Find("Universal Render Pipeline/Lit");
            GameObject shape;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1, 1, 1);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-13.04f, -0.4f, 2);
            shape.transform.rotation = Quaternion.Euler(0, 290, 0);
            shape.transform.localScale = new Vector3(3.5f, 10, 4);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1, 1, 1);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(13.04f, -0.4f, 2);
            shape.transform.rotation = Quaternion.Euler(-0, 70, -0);
            shape.transform.localScale = new Vector3(3.5000005f, 10, 4);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1, 1, 1);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-11.2f, -0.2f, 5.8f);
            shape.transform.rotation = Quaternion.Euler(0, 300, 0);
            shape.transform.localScale = new Vector3(5.7f, 10, 4);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1, 1, 1);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(11.2f, -0.2f, 5.8f);
            shape.transform.rotation = Quaternion.Euler(0, 60.000004f, 0);
            shape.transform.localScale = new Vector3(5.7f, 10, 4);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1, 1, 1);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8, -0.1f, 9);
            shape.transform.rotation = Quaternion.Euler(0, 330, 0);
            shape.transform.localScale = new Vector3(8, 10, 4);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1, 1, 1);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(8, -0.1f, 9);
            shape.transform.rotation = Quaternion.Euler(0, 30.000002f, -0);
            shape.transform.localScale = new Vector3(8, 10, 4);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1, 1, 1);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0, 0, 11);
            shape.transform.rotation = Quaternion.Euler(0, 0, 0);
            shape.transform.localScale = new Vector3(12, 10, 4);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.92679244f, 0.7539623f, 0.5964f);
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0, -15, 0);
            shape.transform.rotation = Quaternion.Euler(0, 0, 0);
            shape.transform.localScale = new Vector3(25, 10, 20);
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.92679244f, 0.7539623f, 0.5964f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0, -5, 0);
            shape.transform.rotation = Quaternion.Euler(0, 0, 0);
            shape.transform.localScale = new Vector3(25, 0.01f, 20);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            mapParent.transform.position = new Vector3(0, 1.5f, 0);
            mapParent.transform.rotation = Quaternion.Euler(0, 90f, 0);
            mapParent.SetActive(false);
        }

        //By LMSparrow
        private void LoadKingOfTheThrone()
        {
            GameObject mapParent = new GameObject();
            mapParent.name = "King of the Throne";
            mapParent.transform.parent = mapsParent.transform;
            MeshCollider meshCollider;
            GroundCollider groundCollider;
            Shader urp = Shader.Find("Universal Render Pipeline/Lit");
            GameObject shape;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4745f, 0.30979997f, 0.23919997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5f, -3f, -4f);
            shape.transform.rotation = Quaternion.Euler(4.768376E-07f, 271.694f, -2.1425876E-07f);
            shape.transform.localScale = new Vector3(2.0000002f, 2f, 2.0000002f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10f, -5.01f, 0f);
            shape.transform.rotation = Quaternion.Euler(0f, 270f, 0f);
            shape.transform.localScale = new Vector3(20f, 0.01f, 15f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Quad);
            shape.AddComponent<BoxCollider>();
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6f, -5.000002f, 0f);
            shape.transform.rotation = Quaternion.Euler(0f, 270f, 0f);
            shape.transform.localScale = new Vector3(8f, 3f, 1f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Sphere);
            Component.Destroy(shape.GetComponent<SphereCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4745f, 0.30979997f, 0.23919997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5f, -1f, -4f);
            shape.transform.rotation = Quaternion.Euler(0f, 270f, 0f);
            shape.transform.localScale = new Vector3(2.0000002f, 2f, 2.0000002f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Quad);
            shape.AddComponent<BoxCollider>();
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6f, -3f, -9f);
            shape.transform.rotation = Quaternion.Euler(0f, 270f, 0f);
            shape.transform.localScale = new Vector3(10f, 4.25f, 1f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4745f, 0.30979997f, 0.23919997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5f, -4f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 270f, 90f);
            shape.transform.localScale = new Vector3(2f, 4.125f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4745f, 0.30979997f, 0.23919997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -1f, -4f);
            shape.transform.rotation = Quaternion.Euler(-0f, -0f, 90f);
            shape.transform.localScale = new Vector3(2f, 5f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4745f, 0.30979997f, 0.23919997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5f, -1f, -9f);
            shape.transform.rotation = Quaternion.Euler(-0f, 270f, 90f);
            shape.transform.localScale = new Vector3(2f, 5f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Quad);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -3.125f, -3f);
            shape.transform.rotation = Quaternion.Euler(0f, 180f, 0f);
            shape.transform.localScale = new Vector3(10f, 4.25f, 1f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4745f, 0.30979997f, 0.23919997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5f, -3f, 4f);
            shape.transform.rotation = Quaternion.Euler(4.768376E-07f, 271.694f, -2.1425876E-07f);
            shape.transform.localScale = new Vector3(2.0000002f, 2f, 2.0000002f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4745f, 0.30979997f, 0.23919997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -1f, 4f);
            shape.transform.rotation = Quaternion.Euler(-0f, -0f, 90f);
            shape.transform.localScale = new Vector3(2f, 5f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4745f, 0.30979997f, 0.23919997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5f, -1f, 8.999996f);
            shape.transform.rotation = Quaternion.Euler(-0f, 270f, 90f);
            shape.transform.localScale = new Vector3(2f, 5f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Sphere);
            Component.Destroy(shape.GetComponent<SphereCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4745f, 0.30979997f, 0.23919997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5f, -1f, 4f);
            shape.transform.rotation = Quaternion.Euler(4.768376E-07f, 271.694f, -2.1425876E-07f);
            shape.transform.localScale = new Vector3(2.0000002f, 2f, 2.0000002f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -0.01f, 9f);
            shape.transform.rotation = Quaternion.Euler(0f, 270f, 0f);
            shape.transform.localScale = new Vector3(10f, 0.01f, 10f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Quad);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -3.125f, 3f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(10f, 4.25f, 1f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Quad);
            shape.AddComponent<BoxCollider>();
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6f, -3f, 9f);
            shape.transform.rotation = Quaternion.Euler(0f, 270f, 0f);
            shape.transform.localScale = new Vector3(10f, 4.25f, 1f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-12.35f, 4.99f, 0f);
            shape.transform.rotation = Quaternion.Euler(0f, 270f, 0f);
            shape.transform.localScale = new Vector3(35f, 0.01f, 12.7f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4745f, 0.30979997f, 0.23919997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6f, 4f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 270f, 90f);
            shape.transform.localScale = new Vector3(2f, 17.5f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Quad);
            shape.AddComponent<BoxCollider>();
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5f, 0f, 0f);
            shape.transform.rotation = Quaternion.Euler(0f, 270f, 0f);
            shape.transform.localScale = new Vector3(35f, 8f, 1f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.555f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.9024124f, -4.5536003f, -7.3480253f);
            shape.transform.rotation = Quaternion.Euler(4.768376E-07f, 271.694f, -2.1425876E-07f);
            shape.transform.localScale = new Vector3(0.75000006f, 0.75f, 0.75000006f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.555f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.4737663f, -4.5536003f, 7.1456404f);
            shape.transform.rotation = Quaternion.Euler(4.768376E-07f, 271.694f, -2.1425876E-07f);
            shape.transform.localScale = new Vector3(0.75000006f, 0.75f, 0.75000006f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -0.01f, -9f);
            shape.transform.rotation = Quaternion.Euler(0f, 270f, 0f);
            shape.transform.localScale = new Vector3(10f, 0.01f, 10f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -3.01f, 0f);
            shape.transform.rotation = Quaternion.Euler(0f, 270f, 0f);
            shape.transform.localScale = new Vector3(6f, 0.01f, 10f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1f, -6.5f, -8.75f);
            shape.transform.rotation = Quaternion.Euler(323.1301f, 0f, 330f);
            shape.transform.localScale = new Vector3(22.5f, 22.5f, 0.1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1f, -6.5f, 8.75f);
            shape.transform.rotation = Quaternion.Euler(36.869915f, 6.4033034E-06f, 60.00003f);
            shape.transform.localScale = new Vector3(22.5f, 22.5f, 0.1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-12.25f, 4.5f, -15f);
            shape.transform.rotation = Quaternion.Euler(344.99997f, 30.000002f, 0f);
            shape.transform.localScale = new Vector3(15f, 21.5f, 0.1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.23139995f, 0.23139995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-14.125f, 15f, -17f);
            shape.transform.rotation = Quaternion.Euler(90f, 300f, 0f);
            shape.transform.localScale = new Vector3(1f, 8.25f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-18.5f, 4.5f, 0f);
            shape.transform.rotation = Quaternion.Euler(345f, 90f, 0f);
            shape.transform.localScale = new Vector3(25.500004f, 21.500002f, 0.09999999f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.23139995f, 0.23139995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20.849998f, 15f, 0f);
            shape.transform.rotation = Quaternion.Euler(90f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 13.5f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8431f, 0.7373f, 0.55689996f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-12.25f, 4.5f, 15f);
            shape.transform.rotation = Quaternion.Euler(15.000001f, 330f, 0f);
            shape.transform.localScale = new Vector3(15.000001f, 21.5f, 0.099999994f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.23139995f, 0.23139995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-14.125f, 15f, 17f);
            shape.transform.rotation = Quaternion.Euler(90f, 240f, 0f);
            shape.transform.localScale = new Vector3(1f, 8.25f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            mapParent.transform.position = new Vector3(-10, 1, 0);
            mapParent.SetActive(false);
        }

        //By UlvakSkillz
        private void LoadAgniKai()
        {
            GameObject mapParent = new GameObject();
            mapParent.name = "Agni Kai";
            mapParent.transform.parent = mapsParent.transform;
            MeshCollider meshCollider;
            GroundCollider groundCollider;
            Shader urp = Shader.Find("Universal Render Pipeline/Lit");
            GameObject shape;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.54509795f, 0.27058795f, 0.07450978f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -6f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(20f, 0.01f, 30f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.5f, -5.5f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.25f, 1f, 30f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.5f, -5.5f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.25f, 1f, 30f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -5.51f, -14.9f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(15.199997f, 1f, 0.25f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -5.51f, 14.9f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(15.199997f, 1f, 0.25f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -5.2799997f, 13.779982f);
            shape.transform.rotation = Quaternion.Euler(344.5f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.4999999f, 1f, 0.5999999f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -5.28f, -13.78f);
            shape.transform.rotation = Quaternion.Euler(344.5f, 180f, -5.2809536E-14f);
            shape.transform.localScale = new Vector3(0.4999999f, 1f, 0.59999985f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.4999998f, -7.68f, 14.449982f);
            shape.transform.rotation = Quaternion.Euler(344.5f, 0f, 270f);
            shape.transform.localScale = new Vector3(0.4999999f, 1f, 0.5999999f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.5f, -7.679999f, 14.48f);
            shape.transform.rotation = Quaternion.Euler(344.5f, 0f, 90f);
            shape.transform.localScale = new Vector3(0.49999988f, 1f, 0.59999996f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.5f, -7.68f, -14.45f);
            shape.transform.rotation = Quaternion.Euler(344.5f, 180f, 90f);
            shape.transform.localScale = new Vector3(0.49999988f, 1f, 0.5999998f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.5f, -7.68f, -14.48f);
            shape.transform.rotation = Quaternion.Euler(344.5f, 180f, 270f);
            shape.transform.localScale = new Vector3(0.49999985f, 1f, 0.5999999f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43399996f, 0.47169995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.1699991f, -2.4809067f, 17.279997f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 2f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -4.477637f, 17.90366f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.8500001f, 1f, 0.25f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43399996f, 0.47169995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.17f, -2.4809f, 17.28f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 2f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -4.4776f, -17.9037f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.8500001f, 1f, 0.25f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43399996f, 0.47169995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.17f, -2.4809f, -17.28f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 2f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.17f, -2.4809f, -17.28f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 2f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -5.7276f, -16.653694f);
            shape.transform.rotation = Quaternion.Euler(90f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.8500001f, 1f, 0.25f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -5.7276f, 16.6537f);
            shape.transform.rotation = Quaternion.Euler(90f, 180f, 0f);
            shape.transform.localScale = new Vector3(0.8500001f, 1f, 0.25f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.2499924f, -5.7276f, 17.903704f);
            shape.transform.rotation = Quaternion.Euler(90f, 90f, 0f);
            shape.transform.localScale = new Vector3(0.25f, 1f, 0.25f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.25f, -5.7276f, 17.9037f);
            shape.transform.rotation = Quaternion.Euler(90f, 270f, 0f);
            shape.transform.localScale = new Vector3(0.25f, 1f, 0.25f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.25f, -5.7276f, -17.9037f);
            shape.transform.rotation = Quaternion.Euler(90f, 90f, 0f);
            shape.transform.localScale = new Vector3(0.25f, 1f, 0.25f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8235f, 0.7059f, 0.54899997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.25f, -5.7276f, -17.9037f);
            shape.transform.rotation = Quaternion.Euler(90f, 270f, 0f);
            shape.transform.localScale = new Vector3(0.25f, 1f, 0.25f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;//
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0.01f, -17.26f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(10f, 1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.250002f, 0.46999982f, -17.26f);
            shape.transform.rotation = Quaternion.Euler(0f, 0f, 340.8122f);
            shape.transform.localScale = new Vector3(3f, 1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.25f, 0.47f, -17.261f);
            shape.transform.rotation = Quaternion.Euler(-0f, 180f, 340.8122f);
            shape.transform.localScale = new Vector3(2.9999998f, 1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.25f, 0.47f, 17.261f);
            shape.transform.rotation = Quaternion.Euler(-0f, 180f, 340.8122f);
            shape.transform.localScale = new Vector3(2.9999995f, 1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.25f, 0.47f, 17.26f);
            shape.transform.rotation = Quaternion.Euler(0f, 0f, 340.8122f);
            shape.transform.localScale = new Vector3(3f, 1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;//
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0.01f, 17.26f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(10f, 1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.26352894f, 0.10588197f, 0f);
            shape.layer = 9;//
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -5.51f, 19.59824f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(15f, 15f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.26352894f, 0.10588197f, 0f);
            shape.layer = 9;//
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -5.51f, -19.5982f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(15f, 15f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.51f, -3.49f, -19.1f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 2f, 0.1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.51f, -3.49f, -19.1f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 2f, 0.1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.51f, -3.49f, 19.1f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 2f, 0.1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.51f, -3.49f, 19.1f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 2f, 0.1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Sphere);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.5f, 0.5f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.22000003f, -3.5999987f, 19.049067f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.15f, 0.15f, 0.01f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Sphere);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.5f, 0.5f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.22f, -3.6f, 19.0491f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.15f, 0.15f, 0.01f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Sphere);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.5f, 0.5f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.22f, -3.6f, -19.0491f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.15f, 0.15f, 0.01f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Sphere);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.5f, 0.5f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.22f, -3.6f, -19.0491f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.15f, 0.15f, 0.01f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, -14f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, -12f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, -10f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, -8f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, -6f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, -4f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, -2f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, 2f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, 4f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, 6f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, 8f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, 10f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, 12f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, -3.1809f, 14f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, -14f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, -12f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, -10f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, -8f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, -6f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, -4f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, -2f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, 2f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, 4f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, 6f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, 8f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, 10f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, 12f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.31999996f, 0.43396223f, 0.4716981f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, -3.1809f, 14f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 3f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;//
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.07f, 0f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 1f, 30f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.823529f, 0.705882f, 0.549019f);
            shape.layer = 9;//
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.07f, 0f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 1f, 30f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            mapParent.transform.position = new Vector3(0, 1.5f, 0);
            mapParent.SetActive(false);
        }

        //By ERROR
        private void LoadProBendingArena()
        {
            GameObject mapParent = new GameObject();
            mapParent.name = "Pro Bending Arena";
            mapParent.transform.parent = mapsParent.transform;
            MeshCollider meshCollider;
            GroundCollider groundCollider;
            Shader urp = Shader.Find("Universal Render Pipeline/Lit");
            GameObject shape;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.2127f, 0f, -11.2326f);
            shape.transform.rotation = Quaternion.Euler(-0f, 79.48449f, -0f);
            shape.transform.localScale = new Vector3(20.861769f, 1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0f, -11.216444f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(17.5707f, 0.1527f, 20.7091f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.238154f, 0f, 9.2871475f);
            shape.transform.rotation = Quaternion.Euler(-0f, 79.48449f, -0f);
            shape.transform.localScale = new Vector3(21.287207f, 1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.2127f, 0f, -11.2326f);
            shape.transform.rotation = Quaternion.Euler(0f, 280.5155f, 0f);
            shape.transform.localScale = new Vector3(20.86177f, 1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999995f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0f, 9.4763f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(17.5707f, 0.1527f, 20.7091f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999995f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.974181f, -0.004363618f, 6.870845f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1.0488521f, 0.1527f, 15.487297f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999995f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.8759985f, -0.004363618f, 5.1530304f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.96848977f, 0.14870001f, 12.0473f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.2382f, 0f, 9.2871f);
            shape.transform.rotation = Quaternion.Euler(0f, 280.5155f, 0f);
            shape.transform.localScale = new Vector3(21.287207f, 1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999995f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-11.475997f, -0.004363618f, 1.1806688f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.6866705f, 0.14506364f, 4.0945807f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999995f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.832361f, -0.004363618f, 2.504304f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.94485295f, 0.14870001f, 6.745487f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999995f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(11.476f, -0.0044f, 1.1807f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.6866705f, 0.14506364f, 4.0945807f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999995f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.8324f, -0.0044f, 2.5043f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.94485295f, 0.14870001f, 6.745487f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.9742f, -0.0044f, -8.595196f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1.0488521f, 0.1527f, 15.487297f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999995f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.876f, -0.0044f, 5.153f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.96848977f, 0.14870001f, 12.0473f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.876f, -0.0044f, -6.8871894f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.96848977f, 0.14870001f, 12.0473f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999995f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(8.9742f, -0.0044f, 6.8708f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1.0488521f, 0.1527f, 15.487297f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.8324f, -0.0044f, -4.231571f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.94485295f, 0.14870001f, 6.745487f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.8324f, -0.0044f, -4.2316f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.94485295f, 0.14870001f, 6.745487f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-11.476f, -0.0044f, -2.2097902f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.6866705f, 0.14506364f, 4.0945807f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.876f, -0.0044f, -6.8872f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.96848977f, 0.14870001f, 12.0473f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(11.476f, -0.0044f, -2.9019792f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(0.6866705f, 0.14506364f, 4.0945807f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.036363646f, -0.018181674f, -0.883636f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(7f, 0.1f, 7f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(8.9742f, -0.0044f, -8.5952f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1.0488521f, 0.1527f, 15.487297f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.29999995f, 0.29999995f, 0.29999995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.036363646f, 0f, -0.883636f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(6.5f, 0.11f, 6.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.39999995f, 0.39999995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.7215f, -3.44f, -18.3552f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(2f, 6.8655f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.39999995f, 0.39999995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.7215f, -3.44f, -18.3552f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(2f, 6.8655f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.39999995f, 0.39999995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.7215f, -3.44f, 18.3552f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(2f, 6.8655f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.39999995f, 0.39999995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.7215f, -7.0799966f, 18.3552f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(2f, 14.276402f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0f, -11.216444f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(17.5707f, 0.1527f, 20.7091f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.29999995f, 0.5f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -11.365466f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1000f, 1000f, 1000f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999998f, 0.39999998f, 0.39999998f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.010908917f, 0f, -8.549085f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(22.421833f, 0.1f, 7.4799995f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.25818205f, 0.011272733f, -9.250902f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(21.643576f, 0.1f, 7.4799995f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999998f, 0.39999998f, 0.39999998f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.25818205f, 0.016000021f, -14.77978f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(19.519958f, 0.1f, 7.4799995f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5f, 0.8f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.25818205f, 0.019636467f, -15.544588f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(19.299929f, 0.1f, 7.4799995f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999998f, 0.39999998f, 0.39999998f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.2582f, -0.02181819f, 6.8200107f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(21.861778f, 0.1f, 7.4799995f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999998f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.2582f, 0.0113f, 7.4854474f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(21.552736f, 0.1f, 7.4799995f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999998f, 0.39999998f, 0.39999998f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.2582f, 0.016f, 12.61253f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(19.698109f, 0.1f, 7.4799995f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.29999998f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.2582f, 0.0196f, 13.522796f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(19.32904f, 0.1f, 7.4799995f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.5636344f, -0.0036363527f, -4.1381803f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.888914f, -0.0036363527f, -4.621816f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.74147f, -0.0036363527f, -5.7781787f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.7415f, -0.0036f, -5.7782f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.8889f, -0.0036f, -4.6218f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.5636f, -0.0036f, -4.1382f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.4254174f, -0.0036f, -1.8145657f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.4254f, -0.0036f, -1.8146f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.3236f, -0.0036f, -1.8146f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.3236f, -0.0036f, -1.8146f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.207234f, 0.014581703f, -7.8255033f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.709056f, 0.014581703f, -6.905504f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.7091f, 0.0146f, -6.9055f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(8.2072f, 0.0146f, -7.8255f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0.0146f, -6.5091376f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0.0146f, -10.347324f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.910904f, 0.0146f, -11.670965f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.9109f, 0.0146f, -11.671f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0.029145353f, -12.812777f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.2818146f, 0.029145353f, -13.785505f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.9763455f, 0.0291f, -13.810954f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.39999995f, 0.39999995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.7215f, -7.08f, 18.3552f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(2f, 14.276402f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.39999995f, 0.39999995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.7215f, -7.08f, -18.3552f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(2f, 14.276402f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.39999995f, 0.39999995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.7215f, -7.08f, -18.3552f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(2f, 14.276402f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.39999995f, 0.39999995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.809089f, -8.263645f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(2f, 16.658258f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.39999995f, 0.39999995f, 0.39999995f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.8091f, -8.2636f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(2f, 16.658258f, 2f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.9763f, 0.0291f, 11.996456f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.2818f, 0.0291f, 11.869128f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0.0291f, 10.481894f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.9109f, 0.0146f, 9.494635f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.9109f, 0.0146f, 9.336463f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0.0146f, 8.145485f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0.0146f, 4.47281f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(8.2072f, 0.0146f, 6.1418653f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.7091f, 0.0146f, 4.8400474f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.7091f, 0.0146f, 4.9236836f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.47812f, 0.0146f, 3.8818674f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.3236f, -0.0036f, 0.047326736f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.3236f, -0.0036f, 0.13459921f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.4254f, -0.0036f, 0.35278285f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.4254f, -0.0036f, 0.018237509f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.5636f, -0.0036f, 2.6218376f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.876303f, 0.0146f, 2.958232f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.979944f, 0.0146f, 6.6273184f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.8417673f, 0.0146f, 2.3691406f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.210954f, 0.0146f, 3.205504f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.925479f, 0.0146f, 4.6345935f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.1f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0.13f, -0.86f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(15.6545315f, 0.01f, 41.365826f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.932717f, 0.13f, 9.135538f);
            shape.transform.rotation = Quaternion.Euler(-0f, 10.5999f, -0f);
            shape.transform.localScale = new Vector3(4.06727f, 0.01f, 21.098606f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.9327f, 0.13f, 9.1355f);
            shape.transform.rotation = Quaternion.Euler(-0f, 170.5999f, -0f);
            shape.transform.localScale = new Vector3(4.0672703f, 0.01f, 21.098608f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.9327f, 0.13f, -10.835506f);
            shape.transform.rotation = Quaternion.Euler(-0f, 10.5999f, -0f);
            shape.transform.localScale = new Vector3(4.06727f, 0.01f, 21.098608f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.9327006f, 0.13f, -10.835506f);
            shape.transform.rotation = Quaternion.Euler(-0f, 170.5999f, -0f);
            shape.transform.localScale = new Vector3(4.0672703f, 0.01f, 21.098606f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            mapParent.transform.position = new Vector3(0, -0.1f, 0.5f);
            mapParent.SetActive(false);
        }

        //By UlvakSkillz
        private void LoadRedVsBlue()
        {
            GameObject mapParent = new GameObject();
            mapParent.name = "RedVsBlue";
            mapParent.transform.parent = mapsParent.transform;
            MeshCollider meshCollider;
            GroundCollider groundCollider;
            Shader urp = Shader.Find("Universal Render Pipeline/Lit");
            GameObject shape;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.7683716E-07f, -1f, -5.0000005f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, -0f);
            shape.transform.localScale = new Vector3(10f, 0.1f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1.9073486E-06f, 1.55f, 15.000002f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, -0f);
            shape.transform.localScale = new Vector3(10.1f, 0.1f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-1.9073486E-06f, 1.55f, -15.000002f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, -0f);
            shape.transform.localScale = new Vector3(10.1f, 0.1f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.536743E-07f, 0.25f, 10.000001f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, 90f);
            shape.transform.localScale = new Vector3(2.5f, 0.1f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.536743E-07f, 0.25f, -10.000001f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, 270f);
            shape.transform.localScale = new Vector3(2.5f, 0.1f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-1.9073486E-06f, 4f, -20.000002f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, 90f);
            shape.transform.localScale = new Vector3(10f, 0.1f, 19.9f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1.9073486E-06f, 4f, 20.000002f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, 90f);
            shape.transform.localScale = new Vector3(10f, 0.1f, 19.900002f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10f, 4f, -10.025002f);
            shape.transform.rotation = Quaternion.Euler(90f, 90f, 0f);
            shape.transform.localScale = new Vector3(20.05f, 0.1f, 10f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.7683716E-07f, -1f, 5.0000005f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, -0f);
            shape.transform.localScale = new Vector3(10f, 0.1f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.000002f, 4f, 10.024999f);
            shape.transform.rotation = Quaternion.Euler(90f, 90f, 0f);
            shape.transform.localScale = new Vector3(20.05f, 0.1f, 10f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10f, 4f, 10.025002f);
            shape.transform.rotation = Quaternion.Euler(90f, 90f, 0f);
            shape.transform.localScale = new Vector3(20.05f, 0.1f, 10f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.000002f, 4f, -10.024999f);
            shape.transform.rotation = Quaternion.Euler(90f, 90f, 0f);
            shape.transform.localScale = new Vector3(20.05f, 0.1f, 10f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 1f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, 0.055000007f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, 90f);
            shape.transform.localScale = new Vector3(2f, 0.1f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -7f, 500f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, -0f);
            shape.transform.localScale = new Vector3(1000f, 0.1f, 1000f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -7f, -500f);
            shape.transform.rotation = Quaternion.Euler(-0f, 90f, -0f);
            shape.transform.localScale = new Vector3(1000f, 0.1f, 1000f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            mapParent.SetActive(false);
        }

        //By CRWND
        private void LoadRedWoods()
        {
            GameObject mapParent = new GameObject();
            mapParent.name = "Red Woods";
            mapParent.transform.parent = mapsParent.transform;
            MeshCollider meshCollider;
            GroundCollider groundCollider;
            Shader urp = Shader.Find("Universal Render Pipeline/Lit");
            GameObject shape;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.5460377f, 0.2599999f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -20.3f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(26f, 20f, 26f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -0.7999f, 7f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.5001f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.24754712f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -0.7999f, -7f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(1f, 0.5001f, 1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 3f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5f, 5f, 5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 20f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(4.5f, 15f, 4.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, -6f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5.5f, 8f, 5.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 20f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(20f, 0.5f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 25f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(17f, 0.5f, 17f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 30f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(14f, 0.5f, 14f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 35f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(11f, 0.5f, 11f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 15f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(13f, 0.5f, 13f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20f, 15f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(13f, 0.5f, 13f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20f, 19f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(20f, 0.5f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20f, 25f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(17f, 0.5f, 17f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20f, 30f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(14f, 0.5f, 14f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20f, 35f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(11f, 0.5f, 11f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20f, -6f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5.5f, 8f, 5.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20f, 3f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5f, 5f, 5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20f, 20f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(4.5f, 15f, 4.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.09999997f, 0.09999997f, 0.09999997f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -6.5f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(60f, 0.1f, 60f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 40f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(7f, 0.5f, 7f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20f, 40f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(7f, 0.5f, 7f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(26f, -4f, -1f);
            shape.transform.rotation = Quaternion.Euler(-0f, 20.000008f, 339.99997f);
            shape.transform.localScale = new Vector3(9f, 9f, 9f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(25f, -5f, -8.5f);
            shape.transform.rotation = Quaternion.Euler(-1.5258789E-05f, -4.462359E-05f, -2.3461684E-05f);
            shape.transform.localScale = new Vector3(9f, 9f, 9f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(19.8f, -5f, -18.5f);
            shape.transform.rotation = Quaternion.Euler(80.000015f, 339.99997f, -2.9500188E-05f);
            shape.transform.localScale = new Vector3(10f, 10f, 10f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(11.799999f, -5f, -23.5f);
            shape.transform.rotation = Quaternion.Euler(60.000015f, 250f, -1.0245288E-05f);
            shape.transform.localScale = new Vector3(10f, 10.000001f, 9.999999f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.7999992f, -5f, -27.5f);
            shape.transform.rotation = Quaternion.Euler(70.00006f, 270f, 339.99994f);
            shape.transform.localScale = new Vector3(8f, 8f, 8f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.200001f, -5f, -27.5f);
            shape.transform.rotation = Quaternion.Euler(330f, 20.000002f, 0f);
            shape.transform.localScale = new Vector3(9f, 9f, 9f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-15.200001f, -5f, -24.5f);
            shape.transform.rotation = Quaternion.Euler(279.99994f, 220f, 180f);
            shape.transform.localScale = new Vector3(12f, 12f, 12f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-22.2f, -5f, -16.5f);
            shape.transform.rotation = Quaternion.Euler(279.9999f, 10.000037f, -3.6875466E-05f);
            shape.transform.localScale = new Vector3(9f, 9f, 9f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-26.2f, -4f, -8.5f);
            shape.transform.rotation = Quaternion.Euler(279.99997f, 189.99998f, 180f);
            shape.transform.localScale = new Vector3(9.000001f, 9f, 9.000001f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-28.2f, -3f, -0.5f);
            shape.transform.rotation = Quaternion.Euler(279.99994f, 259.99997f, 180f);
            shape.transform.localScale = new Vector3(12f, 12f, 12f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-25.2f, -3f, 10.5f);
            shape.transform.rotation = Quaternion.Euler(290f, 49.999985f, -9.985069E-06f);
            shape.transform.localScale = new Vector3(9f, 9f, 9f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-22.2f, -3f, 16.5f);
            shape.transform.rotation = Quaternion.Euler(279.99994f, 29.999994f, 0f);
            shape.transform.localScale = new Vector3(9f, 9f, 9f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-166f, 20f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(30f, 1f, 30f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-14.200001f, -4f, 24.5f);
            shape.transform.rotation = Quaternion.Euler(270.01978f, 59.999973f, 0f);
            shape.transform.localScale = new Vector3(14f, 14f, 14f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.2000008f, -4f, 27.5f);
            shape.transform.rotation = Quaternion.Euler(279.99994f, 219.99995f, 180f);
            shape.transform.localScale = new Vector3(12f, 12f, 12f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.799999f, -4f, 24.5f);
            shape.transform.rotation = Quaternion.Euler(-4.462361E-05f, 240f, 180f);
            shape.transform.localScale = new Vector3(9f, 9f, 9f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(14.799999f, -3f, 21.5f);
            shape.transform.rotation = Quaternion.Euler(-4.439623E-05f, 260f, 150f);
            shape.transform.localScale = new Vector3(9f, 9f, 9f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(21.8f, -3f, 16.5f);
            shape.transform.rotation = Quaternion.Euler(80.00003f, 290.00003f, 180f);
            shape.transform.localScale = new Vector3(9f, 9f, 9f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(24.8f, -4f, 8.5f);
            shape.transform.rotation = Quaternion.Euler(80.00011f, 260.00003f, 2.950043E-05f);
            shape.transform.localScale = new Vector3(12f, 12f, 12f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.38199988f, 0.7399987f, 0.38199988f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(50.8f, -19f, 8.5f);
            shape.transform.rotation = Quaternion.Euler(80.000015f, 69.99996f, 180f);
            shape.transform.localScale = new Vector3(50f, 50f, 50f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.38199988f, 0.7399987f, 0.38199988f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(21.8f, -19f, 45.5f);
            shape.transform.rotation = Quaternion.Euler(85.00001f, 294.99997f, 0f);
            shape.transform.localScale = new Vector3(50f, 49.999996f, 50.000004f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.38199988f, 0.7399987f, 0.38199988f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-33.2f, -27f, 52.5f);
            shape.transform.rotation = Quaternion.Euler(85.00009f, 59.9996f, 184.99998f);
            shape.transform.localScale = new Vector3(70f, 70f, 70f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.38199988f, 0.7399987f, 0.38199988f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-61.199997f, -17f, -14.5f);
            shape.transform.rotation = Quaternion.Euler(90f, 334.9998f, 0f);
            shape.transform.localScale = new Vector3(50f, 50f, 50f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.38199988f, 0.7399987f, 0.38199988f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-37.199997f, -27f, -57.5f);
            shape.transform.rotation = Quaternion.Euler(80.00054f, 199.99985f, 4.916931E-06f);
            shape.transform.localScale = new Vector3(70f, 70.00001f, 70f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.38199988f, 0.7399987f, 0.38199988f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(32.800003f, -18f, -47.5f);
            shape.transform.rotation = Quaternion.Euler(80.00094f, 144.99983f, 0f);
            shape.transform.localScale = new Vector3(60f, 60f, 60f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(164f, 20f, -1f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(30f, 1f, 30f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(114f, 20f, 165f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(30f, 1f, 30f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(114f, 20f, -163f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(30f, 1f, 30f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7f, 0.7f, 0.7f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0f, -20.4f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(26.1f, 20f, 26.1f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.54599994f, 0.25999996f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5f, -0.7999f, 7f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5f, 0.5001f, 5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.54599994f, 0.25999996f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4f, -0.79990005f, 9f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5f, 0.5001f, 5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.54599994f, 0.25999996f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6f, -0.79990005f, -4f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(7f, 0.5001f, 7f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.54599994f, 0.25999996f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3f, -0.79990005f, -1f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(4f, 0.5001f, 4f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.54599994f, 0.25999996f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9f, -0.79990005f, -4f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5f, 0.5001f, 5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-30f, 4f, 40f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5.5f, 8f, 5.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-30f, 13f, 40f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5f, 5f, 5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-30f, 30f, 40f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(4.5f, 15f, 4.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-30f, 25f, 40f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(13f, 0.5f, 13f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-30f, 29f, 40f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(20f, 0.5f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-30f, 35f, 40f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(17f, 0.5f, 17f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-30f, 40f, 40f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(14f, 0.5f, 14f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-30f, 45f, 40f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(11f, 0.5f, 11f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-30f, 50f, 40f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(7f, 0.5f, 7f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 4f, 30f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5.5f, 8f, 5.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 13f, 30f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5f, 5f, 5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 30f, 30f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(4.5f, 15f, 4.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 25f, 30f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(13f, 0.5f, 13f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 29f, 30f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(20f, 0.5f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 35f, 30f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(17f, 0.5f, 17f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 40f, 30f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(14f, 0.5f, 14f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 45f, 30f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(11f, 0.5f, 11f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(20f, 50f, 30f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(7f, 0.5f, 7f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10f, 4f, -35f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5.5f, 8f, 5.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10f, 13f, -35f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(5f, 5f, 5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.4449056f, 0.29509434f, 0.27999872f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10f, 30f, -35f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(4.5f, 15f, 4.5f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10f, 25f, -35f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(13f, 0.5f, 13f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10f, 29f, -35f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(20f, 0.5f, 20f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10f, 35f, -35f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(17f, 0.5f, 17f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10f, 40f, -35f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(14f, 0.5f, 14f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10f, 45f, -35f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(11f, 0.5f, 11f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cylinder);
            Component.Destroy(shape.GetComponent<CapsuleCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.22490564f, 0.5550943f, 0.27999863f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10f, 50f, -35f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(7f, 0.5f, 7f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.AddComponent<BoxCollider>();
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-1f, 0f, 17f);
            shape.transform.rotation = Quaternion.Euler(90f, 1.0017912E-05f, 0f);
            shape.transform.localScale = new Vector3(10f, 1f, 20f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.AddComponent<BoxCollider>();
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(18f, 0f, 17f);
            shape.transform.rotation = Quaternion.Euler(90f, 90.00001f, 0f);
            shape.transform.localScale = new Vector3(10f, 1f, 19.999998f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.AddComponent<BoxCollider>();
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(14f, 0f, -19f);
            shape.transform.rotation = Quaternion.Euler(90f, 180.00005f, 0f);
            shape.transform.localScale = new Vector3(10f, 1f, 19.999998f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Plane);
            shape.AddComponent<BoxCollider>();
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-20f, 0f, -17f);
            shape.transform.rotation = Quaternion.Euler(90f, 270f, 0f);
            shape.transform.localScale = new Vector3(10f, 1f, 19.999996f);
            meshCollider = shape.GetComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            mapParent.SetActive(false);
        }

        //By SDRAWKCABMIAY
        private void LoadSprinkleDonut()
        {
            GameObject mapParent = new GameObject();
            mapParent.name = "Sprinkle Donut";
            mapParent.transform.parent = mapsParent.transform;
            MeshCollider meshCollider;
            GroundCollider groundCollider;
            Shader urp = Shader.Find("Universal Render Pipeline/Lit");
            GameObject shape;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.8166666f, -0.97919f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.645854f, -0.97919f, -1.6251764f);
            shape.transform.rotation = Quaternion.Euler(0f, 348f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.1400633f, -0.97919f, -3.1626124f);
            shape.transform.rotation = Quaternion.Euler(0f, 336f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.326492f, -0.9791904f, -4.5780044f);
            shape.transform.rotation = Quaternion.Euler(0f, 324f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.236422f, -0.9791904f, -5.793316f);
            shape.transform.rotation = Quaternion.Euler(0f, 312f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.9174957f, -0.9791904f, -6.755431f);
            shape.transform.rotation = Quaternion.Euler(0f, 300f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.427356f, -0.9791904f, -7.4223022f);
            shape.transform.rotation = Quaternion.Euler(0f, 288f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.83112895f, -0.9791904f, -7.7647834f);
            shape.transform.rotation = Quaternion.Euler(0f, 276f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.8014225f, -0.9791904f, -7.7679057f);
            shape.transform.rotation = Quaternion.Euler(0f, 264f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.398948f, -0.9791904f, -7.4315333f);
            shape.transform.rotation = Quaternion.Euler(0f, 252f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.8916278f, -0.9791904f, -6.7703676f);
            shape.transform.rotation = Quaternion.Euler(0f, 240f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.2142253f, -0.9791904f, -5.813304f);
            shape.transform.rotation = Quaternion.Euler(0f, 228f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.308936f, -0.9791904f, -4.602171f);
            shape.transform.rotation = Quaternion.Euler(0f, 216f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.1279163f, -0.9791904f, -3.1899009f);
            shape.transform.rotation = Quaternion.Euler(0f, 204f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.635372f, -0.9791904f, -1.6382167f);
            shape.transform.rotation = Quaternion.Euler(0f, 192f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.8091254f, -0.9791904f, -0.014934659f);
            shape.transform.rotation = Quaternion.Euler(-0f, 179.99998f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.6415825f, -0.9791904f, 1.6090003f);
            shape.transform.rotation = Quaternion.Euler(-0f, 167.99997f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.1400657f, -0.9791904f, 3.1626143f);
            shape.transform.rotation = Quaternion.Euler(-0f, 155.99995f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.3264937f, -0.9791904f, 4.5780067f);
            shape.transform.rotation = Quaternion.Euler(-0f, 143.99994f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.2364235f, -0.9791904f, 5.7933183f);
            shape.transform.rotation = Quaternion.Euler(-0f, 131.99992f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.9174962f, -0.9791904f, 6.755434f);
            shape.transform.rotation = Quaternion.Euler(-0f, 119.99991f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.4273558f, -0.9791904f, 7.422305f);
            shape.transform.rotation = Quaternion.Euler(-0f, 107.9999f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.8311281f, -0.9791904f, 7.764786f);
            shape.transform.rotation = Quaternion.Euler(-0f, 95.999886f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.8014238f, -0.9791904f, 7.767908f);
            shape.transform.rotation = Quaternion.Euler(-0f, 83.99987f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.3989496f, -0.9791904f, 7.4315352f);
            shape.transform.rotation = Quaternion.Euler(-0f, 71.999855f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.89163f, -0.9791904f, 6.7703686f);
            shape.transform.rotation = Quaternion.Euler(-0f, 59.999844f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.2142277f, -0.9791904f, 5.8133044f);
            shape.transform.rotation = Quaternion.Euler(-0f, 47.99983f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.3089385f, -0.9791904f, 4.602171f);
            shape.transform.rotation = Quaternion.Euler(-0f, 35.99982f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.1279187f, -0.9791904f, 3.1899004f);
            shape.transform.rotation = Quaternion.Euler(-0f, 23.9998f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.7612699f, 0.12711161f, 0.4813732f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.6353745f, -0.9791904f, 1.6382158f);
            shape.transform.rotation = Quaternion.Euler(-0f, 11.999789f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.68f, -0.97919f, 4.68f);
            shape.transform.rotation = Quaternion.Euler(-0f, 39.676056f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-1.1415172f, -0.97919f, 7.584401f);
            shape.transform.rotation = Quaternion.Euler(0f, 308.4658f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.914343f, -0.9791901f, 3.1289191f);
            shape.transform.rotation = Quaternion.Euler(-0f, 57.005207f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.048598f, -0.9791906f, -5.163509f);
            shape.transform.rotation = Quaternion.Euler(-0f, 57.005207f, -0f);
            shape.transform.localScale = new Vector3(0.18173298f, 0.034999996f, 1.48723f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.6309133f, -0.97919f, -1.6977806f);
            shape.transform.rotation = Quaternion.Euler(0f, 271.67206f, 0f);
            shape.transform.localScale = new Vector3(0.22050214f, 0.035f, 1.4802772f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.1759853f, -0.97919f, -9.198813f);
            shape.transform.rotation = Quaternion.Euler(-0f, 53.69651f, -0f);
            shape.transform.localScale = new Vector3(0.20838603f, 0.035f, 1.590044f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.037485f, -0.97919f, -2.059507f);
            shape.transform.rotation = Quaternion.Euler(-0f, 21.651236f, -0f);
            shape.transform.localScale = new Vector3(0.23890838f, 0.035f, 1.4800001f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.7148304f, -0.97919f, 7.421494f);
            shape.transform.rotation = Quaternion.Euler(-0f, 93.83895f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.0046434f, -0.97919f, 9.972607f);
            shape.transform.rotation = Quaternion.Euler(-0f, 21.651236f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.629921f, -0.97919f, 2.2050395f);
            shape.transform.rotation = Quaternion.Euler(-0f, 126.58843f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.077549f, -0.97919f, -9.750921f);
            shape.transform.rotation = Quaternion.Euler(-0f, 2.5642982f, -0f);
            shape.transform.localScale = new Vector3(0.18385662f, 0.035f, 1.7754567f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.8784113f, -0.97919f, -5.5244513f);
            shape.transform.rotation = Quaternion.Euler(0f, 258.91043f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1.4435154f, -0.97919f, -6.05752f);
            shape.transform.rotation = Quaternion.Euler(0f, 215.6664f, 0f);
            shape.transform.localScale = new Vector3(0.17216292f, 0.035f, 1.292259f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(8.10687f, -0.97919f, 5.2511435f);
            shape.transform.rotation = Quaternion.Euler(0f, 181.93117f, 0f);
            shape.transform.localScale = new Vector3(0.23885958f, 0.035000004f, 1.1843785f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.887166f, -0.97919f, 5.28922f);
            shape.transform.rotation = Quaternion.Euler(0f, 245.04285f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.62866f, -0.97919f, 0.5677576f);
            shape.transform.rotation = Quaternion.Euler(-0f, 120.27369f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.8851786f, -0.97919f, -6.514436f);
            shape.transform.rotation = Quaternion.Euler(-0f, 160.82265f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.5364518f, -0.97919f, 10.657981f);
            shape.transform.rotation = Quaternion.Euler(-0f, 146.93037f, -0f);
            shape.transform.localScale = new Vector3(0.19544327f, 0.035f, 1.6932863f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.736122f, -0.97919f, -8.456325f);
            shape.transform.rotation = Quaternion.Euler(-0f, 108.45389f, -0f);
            shape.transform.localScale = new Vector3(0.28226727f, 0.035000004f, 1.512273f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.0988407f, -0.97919f, 1.0246763f);
            shape.transform.rotation = Quaternion.Euler(-0f, 131.9271f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(11.114897f, -0.97919f, -1.6406653f);
            shape.transform.rotation = Quaternion.Euler(-0f, 51.874702f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.664749f, -0.97919f, -0.041460276f);
            shape.transform.rotation = Quaternion.Euler(-0f, 51.874702f, -0f);
            shape.transform.localScale = new Vector3(0.18274792f, 0.034999996f, 1.4855249f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1.3292866f, -0.97919f, 5.593834f);
            shape.transform.rotation = Quaternion.Euler(-0f, 2.139997f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.832307f, -0.97919f, -2.7068014f);
            shape.transform.rotation = Quaternion.Euler(0f, 330.72733f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.1356573f, -0.97919f, -7.1236534f);
            shape.transform.rotation = Quaternion.Euler(0f, 359.76273f, 0f);
            shape.transform.localScale = new Vector3(0.18377517f, 0.035f, 1.184006f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.534465f, -0.97919f, -2.2879624f);
            shape.transform.rotation = Quaternion.Euler(-0f, 31.223827f, -0f);
            shape.transform.localScale = new Vector3(0.23890838f, 0.035f, 1.4800001f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.8771515f, -0.97919f, 9.553768f);
            shape.transform.rotation = Quaternion.Euler(-0f, 13.657772f, -0f);
            shape.transform.localScale = new Vector3(0.18192206f, 0.035f, 1.2024229f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.010685f, -0.97919f, 3.994627f);
            shape.transform.rotation = Quaternion.Euler(-0f, 107.17297f, -0f);
            shape.transform.localScale = new Vector3(0.15058221f, 0.035f, 1.4565908f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.309255f, -0.97919f, -9.979379f);
            shape.transform.rotation = Quaternion.Euler(-0f, 12.309906f, -0f);
            shape.transform.localScale = new Vector3(0.18407953f, 0.034999996f, 1.428822f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.8984437f, -0.97919f, 8.563783f);
            shape.transform.rotation = Quaternion.Euler(0f, 286.0277f, 0f);
            shape.transform.localScale = new Vector3(0.21794724f, 0.035f, 1.5046167f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.201067f, -0.97919f, 1.4815891f);
            shape.transform.rotation = Quaternion.Euler(0f, 240.12096f, 0f);
            shape.transform.localScale = new Vector3(0.23890841f, 0.035f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.8871658f, -0.97919f, 4.26116f);
            shape.transform.rotation = Quaternion.Euler(0f, 184.14429f, 0f);
            shape.transform.localScale = new Vector3(0.18398675f, 0.035f, 1.7745821f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.161728f, -0.97919f, -4.1537046f);
            shape.transform.rotation = Quaternion.Euler(-0f, 99.628784f, -0f);
            shape.transform.localScale = new Vector3(0.14817291f, 0.035f, 1.472528f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.0975795f, -0.97919f, -8.227869f);
            shape.transform.rotation = Quaternion.Euler(-0f, 99.628784f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.032706f, -0.97919f, -3.1637201f);
            shape.transform.rotation = Quaternion.Euler(-0f, 44.378395f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.456324f, -0.97919f, 6.73612f);
            shape.transform.rotation = Quaternion.Euler(0f, 309.47964f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.8523397f, -0.97919f, -11.007441f);
            shape.transform.rotation = Quaternion.Euler(0f, 309.47964f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.5357256f, -0.97919f, -4.7248497f);
            shape.transform.rotation = Quaternion.Euler(0f, 309.47964f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.734136f, -0.97919f, -0.8410663f);
            shape.transform.rotation = Quaternion.Euler(0f, 356.2129f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.5176816f, -0.97919f, 7.76418f);
            shape.transform.rotation = Quaternion.Euler(0f, 356.2129f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.608627f, -0.97919f, 2.3573442f);
            shape.transform.rotation = Quaternion.Euler(-0f, 29.858223f, -0f);
            shape.transform.localScale = new Vector3(0.25159883f, 0.035000004f, 1.7074236f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-1.1075953f, -0.97919f, 9.972605f);
            shape.transform.rotation = Quaternion.Euler(-0f, 4.811932f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-1.9452741f, -0.97919f, -8.989397f);
            shape.transform.rotation = Quaternion.Euler(0f, 320.31482f, 0f);
            shape.transform.localScale = new Vector3(0.23890842f, 0.035000004f, 1.4800001f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.3140335f, -0.97919f, -3.354103f);
            shape.transform.rotation = Quaternion.Euler(0f, 320.31482f, 0f);
            shape.transform.localScale = new Vector3(0.23890842f, 0.035000004f, 1.4800001f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.6947966f, -0.97919f, -7.4663444f);
            shape.transform.rotation = Quaternion.Euler(0f, 281.54962f, 0f);
            shape.transform.localScale = new Vector3(0.14866892f, 0.035f, 1.4692822f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.467603f, -0.97919f, 4.6419215f);
            shape.transform.rotation = Quaternion.Euler(0f, 242.49838f, 0f);
            shape.transform.localScale = new Vector3(0.23890841f, 0.035000004f, 1.4800001f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.75814456f, -0.97919f, -6.019445f);
            shape.transform.rotation = Quaternion.Euler(0f, 229.76047f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.45353127f, -0.97919f, 5.746139f);
            shape.transform.rotation = Quaternion.Euler(-0f, 44.418045f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.7741985f, -0.97919f, 8.106871f);
            shape.transform.rotation = Quaternion.Euler(-0f, 81.20409f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.7268338f, -0.97919f, -4.6867695f);
            shape.transform.rotation = Quaternion.Euler(-0f, 123.22253f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.702826f, -0.97919f, -2.8591065f);
            shape.transform.rotation = Quaternion.Euler(-0f, 77.80986f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.428263f, -0.97919f, 6.2792077f);
            shape.transform.rotation = Quaternion.Euler(-0f, 6.6278973f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.80226f, -0.97919f, -8.342094f);
            shape.transform.rotation = Quaternion.Euler(0f, 350.56537f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.6206317f, -0.97919f, -10.626673f);
            shape.transform.rotation = Quaternion.Euler(-0f, 77.82172f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.7322693f, -0.97919f, -7.6832867f);
            shape.transform.rotation = Quaternion.Euler(0f, 342.91586f, 0f);
            shape.transform.localScale = new Vector3(0.1808983f, 0.035f, 1.212399f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.528988f, -0.97919f, -2.3526044f);
            shape.transform.rotation = Quaternion.Euler(0f, 285.74554f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.912733f, -0.97919f, 1.7405982f);
            shape.transform.rotation = Quaternion.Euler(0f, 285.74554f, 0f);
            shape.transform.localScale = new Vector3(0.21803562f, 0.035f, 1.503786f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.100646496f, -0.97919f, 10.815449f);
            shape.transform.rotation = Quaternion.Euler(0f, 314.47723f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.40325308f, -0.97919f, -6.6062226f);
            shape.transform.rotation = Quaternion.Euler(-0f, 131.02551f, -0f);
            shape.transform.localScale = new Vector3(0.183244f, 0.034999996f, 1.483742f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.881117f, -0.97919f, -4.923278f);
            shape.transform.rotation = Quaternion.Euler(-0f, 39.815254f, -0f);
            shape.transform.localScale = new Vector3(0.16967179f, 0.035f, 1.3134539f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(8.749304f, -0.9791901f, 3.564457f);
            shape.transform.rotation = Quaternion.Euler(-0f, 148.35468f, -0f);
            shape.transform.localScale = new Vector3(0.17443246f, 0.035f, 1.2723668f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.3900149f, -0.9791906f, 6.549875f);
            shape.transform.rotation = Quaternion.Euler(-0f, 148.35468f, -0f);
            shape.transform.localScale = new Vector3(0.19458695f, 0.035f, 1.6996704f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.839742f, -0.97919f, -3.7856598f);
            shape.transform.rotation = Quaternion.Euler(-0f, 3.02153f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.474568f, -0.97919f, 4.784009f);
            shape.transform.rotation = Quaternion.Euler(-0f, 145.04597f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.6542206f, -0.97919f, 6.8688397f);
            shape.transform.rotation = Quaternion.Euler(-0f, 113.00069f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.198f, -0.97919f, -1.7704988f);
            shape.transform.rotation = Quaternion.Euler(0f, 185.18845f, 0f);
            shape.transform.localScale = new Vector3(0.23890841f, 0.035000004f, 1.4800004f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.3588467f, -0.97919f, -9.459452f);
            shape.transform.rotation = Quaternion.Euler(-0f, 113.00069f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.750311f, -0.97919f, -8.03315f);
            shape.transform.rotation = Quaternion.Euler(0f, 217.93791f, 0f);
            shape.transform.localScale = new Vector3(0.19847049f, 0.035f, 1.6702935f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.4084601f, -0.97919f, 10.004463f);
            shape.transform.rotation = Quaternion.Euler(-0f, 93.91376f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8000001f, 0.7178172f, 0.011982003f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.561063f, -0.97919f, -1.0839782f);
            shape.transform.rotation = Quaternion.Euler(0f, 350.2599f, 0f);
            shape.transform.localScale = new Vector3(0.18492928f, 0.035f, 1.7682168f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.0953956f, -0.97919f, 3.5796967f);
            shape.transform.rotation = Quaternion.Euler(0f, 307.01587f, 0f);
            shape.transform.localScale = new Vector3(0.20796096f, 0.035f, 1.5936491f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.5910501f, -0.97919f, -9.304961f);
            shape.transform.rotation = Quaternion.Euler(0f, 273.2806f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.4162254f, -0.97919f, -1.384903f);
            shape.transform.rotation = Quaternion.Euler(0f, 336.3923f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.3403015f, -0.97919f, 3.9677029f);
            shape.transform.rotation = Quaternion.Euler(0f, 211.62315f, 0f);
            shape.transform.localScale = new Vector3(0.25294587f, 0.035000004f, 1.6997687f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1.5878344f, -0.97919f, 10.1040945f);
            shape.transform.rotation = Quaternion.Euler(0f, 252.17212f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.464891f, -0.97919f, -7.625991f);
            shape.transform.rotation = Quaternion.Euler(0f, 238.27985f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.648613f, -0.97919f, 1.868638f);
            shape.transform.rotation = Quaternion.Euler(0f, 199.80334f, 0f);
            shape.transform.localScale = new Vector3(0.17993875f, 0.035f, 1.2216244f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.1393337f, -0.97919f, -4.1464105f);
            shape.transform.rotation = Quaternion.Euler(0f, 223.27657f, 0f);
            shape.transform.localScale = new Vector3(0.16751055f, 0.035f, 1.3313239f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0f, 0.5797877f, 0.8000001f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.410963f, -0.97919f, -6.1373043f);
            shape.transform.rotation = Quaternion.Euler(-0f, 143.22415f, -0f);
            shape.transform.localScale = new Vector3(0.23890845f, 0.035000004f, 1.4800004f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.959095f, -0.97919f, 7.09869f);
            shape.transform.rotation = Quaternion.Euler(-0f, 143.22415f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.711622f, -0.97919f, -5.070019f);
            shape.transform.rotation = Quaternion.Euler(-0f, 93.48943f, -0f);
            shape.transform.localScale = new Vector3(0.22040598f, 0.035f, 1.4812059f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.4126234f, -0.97919f, -1.1753626f);
            shape.transform.rotation = Quaternion.Euler(-0f, 62.07677f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.1215777f, -0.97919f, 6.7500534f);
            shape.transform.rotation = Quaternion.Euler(-0f, 91.11218f, -0f);
            shape.transform.localScale = new Vector3(0.14703618f, 0.035f, 1.4798996f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1.8794942f, -0.97919f, 4.7184367f);
            shape.transform.rotation = Quaternion.Euler(-0f, 122.57325f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.983763f, -0.97919f, -3.9224463f);
            shape.transform.rotation = Quaternion.Euler(-0f, 105.00721f, -0f);
            shape.transform.localScale = new Vector3(0.17787033f, 0.034999996f, 1.4834384f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.849478f, -0.97919f, -9.625665f);
            shape.transform.rotation = Quaternion.Euler(0f, 198.52245f, 0f);
            shape.transform.localScale = new Vector3(0.18436837f, 0.034999996f, 1.4378747f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 1f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.09166f, -0.97919f, 5.280237f);
            shape.transform.rotation = Quaternion.Euler(-0f, 103.65934f, -0f);
            shape.transform.localScale = new Vector3(0.1493087f, 0.035f, 1.4650686f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1.2581072f, -0.97919f, -10.322169f);
            shape.transform.rotation = Quaternion.Euler(-0f, 17.377167f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.657467f, -0.97919f, -7.8698797f);
            shape.transform.rotation = Quaternion.Euler(0f, 331.4704f, 0f);
            shape.transform.localScale = new Vector3(0.17606817f, 0.035f, 1.2576702f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.7349195f, -0.97919f, -0.6150141f);
            shape.transform.rotation = Quaternion.Euler(0f, 275.4937f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.6105404f, -0.97919f, 7.856761f);
            shape.transform.rotation = Quaternion.Euler(0f, 190.97824f, 0f);
            shape.transform.localScale = new Vector3(0.18523619f, 0.035f, 1.766132f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.8818684f, -0.97919f, 7.5517397f);
            shape.transform.rotation = Quaternion.Euler(0f, 190.97824f, 0f);
            shape.transform.localScale = new Vector3(0.23890841f, 0.035f, 1.4800001f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.1166263f, -0.97919f, -0.3032832f);
            shape.transform.rotation = Quaternion.Euler(-0f, 135.72781f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(10.796833f, -0.97919f, 0.55957747f);
            shape.transform.rotation = Quaternion.Euler(-0f, 40.82906f, -0f);
            shape.transform.localScale = new Vector3(0.20031406f, 0.035f, 1.655959f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.430795f, -0.97919f, 6.35293f);
            shape.transform.rotation = Quaternion.Euler(-0f, 40.82906f, -0f);
            shape.transform.localScale = new Vector3(0.20031406f, 0.035f, 1.655959f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.774529f, -0.97919f, -1.4556789f);
            shape.transform.rotation = Quaternion.Euler(-0f, 40.82906f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-8.595918f, -0.97919f, -6.48377f);
            shape.transform.rotation = Quaternion.Euler(-0f, 87.56229f, -0f);
            shape.transform.localScale = new Vector3(0.28661084f, 0.035000004f, 1.480589f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1.0133462f, -0.97919f, -9.471032f);
            shape.transform.rotation = Quaternion.Euler(-0f, 87.56229f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(8.009029f, -0.97919f, 3.9396696f);
            shape.transform.rotation = Quaternion.Euler(-0f, 121.20765f, -0f);
            shape.transform.localScale = new Vector3(0.18134826f, 0.034999996f, 1.4874262f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.4384003f, -0.97919f, -6.734226f);
            shape.transform.rotation = Quaternion.Euler(-0f, 96.16134f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.5005994f, -0.97919f, 8.021095f);
            shape.transform.rotation = Quaternion.Euler(-0f, 51.66424f, -0f);
            shape.transform.localScale = new Vector3(0.23890842f, 0.035000004f, 1.4800004f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.2545033f, -0.97919f, 7.3588934f);
            shape.transform.rotation = Quaternion.Euler(-0f, 51.664253f, -0f);
            shape.transform.localScale = new Vector3(0.20716318f, 0.035f, 1.600374f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.81442165f, -0.97919f, 10.690786f);
            shape.transform.rotation = Quaternion.Euler(-0f, 12.899037f, -0f);
            shape.transform.localScale = new Vector3(0.18211979f, 0.035f, 1.20048f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.762684f, -0.97919f, -10.413212f);
            shape.transform.rotation = Quaternion.Euler(0f, 333.84775f, 0f);
            shape.transform.localScale = new Vector3(0.24890968f, 0.035000004f, 1.7224824f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.8970899f, 0.0014378068f, 0f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.5569053f, -0.97919f, 4.005386f);
            shape.transform.rotation = Quaternion.Euler(0f, 321.10986f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.468388f, -0.97919f, -4.603704f);
            shape.transform.rotation = Quaternion.Euler(-0f, 135.7675f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.2994752f, -0.97919f, -10.560371f);
            shape.transform.rotation = Quaternion.Euler(-0f, 172.55353f, -0f);
            shape.transform.localScale = new Vector3(0.18445355f, 0.035f, 1.7714363f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.5616632f, -0.97919f, 3.9914885f);
            shape.transform.rotation = Quaternion.Euler(0f, 214.57199f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.120325f, -0.97919f, 9.23399f);
            shape.transform.rotation = Quaternion.Euler(-0f, 169.1593f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(9.724144f, -0.97919f, 0.22044182f);
            shape.transform.rotation = Quaternion.Euler(-0f, 97.97733f, -0f);
            shape.transform.localScale = new Vector3(0.19215931f, 0.035000004f, 1.4748602f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-11.371317f, -0.97919f, 1.0765524f);
            shape.transform.rotation = Quaternion.Euler(-0f, 81.9148f, -0f);
            shape.transform.localScale = new Vector3(0.14783627f, 0.035f, 1.4747208f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.331004f, -0.97919f, 10.357489f);
            shape.transform.rotation = Quaternion.Euler(-0f, 169.17116f, -0f);
            shape.transform.localScale = new Vector3(0.18260439f, 0.035f, 1.1956964f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.05016136f, -0.97919f, 10.215372f);
            shape.transform.rotation = Quaternion.Euler(-0f, 74.2653f, -0f);
            shape.transform.localScale = new Vector3(0.15003064f, 0.035f, 1.4602773f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-9.444f, -0.97919f, -5.2158623f);
            shape.transform.rotation = Quaternion.Euler(-0f, 17.094969f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.5255136f, -0.97919f, -4.5592113f);
            shape.transform.rotation = Quaternion.Euler(-0f, 17.094969f, -0f);
            shape.transform.localScale = new Vector3(0.1843015f, 0.034999996f, 1.4355841f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.35959396f, 0f, 1f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.242883f, -0.97919f, -8.032728f);
            shape.transform.rotation = Quaternion.Euler(-0f, 45.82668f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.654403f, -0.97919f, 1.6406004f);
            shape.transform.rotation = Quaternion.Euler(-0f, 33.967667f, -0f);
            shape.transform.localScale = new Vector3(0.23890845f, 0.035000004f, 1.4800004f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.50632f, -0.97919f, 0.3333133f);
            shape.transform.rotation = Quaternion.Euler(0f, 356.9156f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.48970985f, -0.97919f, 8.405496f);
            shape.transform.rotation = Quaternion.Euler(0f, 310.4101f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.7442436f, -0.97919f, -6.2158155f);
            shape.transform.rotation = Quaternion.Euler(0f, 356.9156f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(1.4796946f, -0.97919f, -6.90119f);
            shape.transform.rotation = Quaternion.Euler(0f, 263.86658f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.917129f, -0.97919f, -5.682747f);
            shape.transform.rotation = Quaternion.Euler(0f, 194.52454f, 0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-10.209739f, -0.97919f, -3.3981671f);
            shape.transform.rotation = Quaternion.Euler(-0f, 112.04377f, -0f);
            shape.transform.localScale = new Vector3(0.18377572f, 0.035000004f, 1.48f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.8765182f, -0.97919f, 6.082839f);
            shape.transform.rotation = Quaternion.Euler(0f, 252.54724f, 0f);
            shape.transform.localScale = new Vector3(0.15069416f, 0.035f, 1.4558398f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-4.1175256f, -0.97919f, 1.8563662f);
            shape.transform.rotation = Quaternion.Euler(-0f, 39.52508f, -0f);
            shape.transform.localScale = new Vector3(0.220805f, 0.035000004f, 1.3119594f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(4.678107f, -0.97919f, 6.4255257f);
            shape.transform.rotation = Quaternion.Euler(0f, 310.99243f, 0f);
            shape.transform.localScale = new Vector3(0.16384941f, 0.035f, 1.3605525f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0f, 0.57453656f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.8785038f, -0.97919f, -8.614624f);
            shape.transform.rotation = Quaternion.Euler(0f, 310.99243f, 0f);
            shape.transform.localScale = new Vector3(0.205523f, 0.035f, 1.6140311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(0.02075306f, 0.6618613f, 0.02532954f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.7571456f, -0.97919f, 3.6773195f);
            shape.transform.rotation = Quaternion.Euler(0f, 272.65573f, 0f);
            shape.transform.localScale = new Vector3(0.16942024f, 0.035f, 1.5046167f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.8166666f, -3.4791899f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.645854f, -3.4791899f, -1.6251764f);
            shape.transform.rotation = Quaternion.Euler(0f, 348f, 0f);
            shape.transform.localScale = new Vector3(8.931348f, 4.98537f, 2.5831096f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.1400633f, -3.4791899f, -3.1626124f);
            shape.transform.rotation = Quaternion.Euler(0f, 336f, 0f);
            shape.transform.localScale = new Vector3(8.931348f, 4.98537f, 2.5831096f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.326492f, -3.4791903f, -4.5780044f);
            shape.transform.rotation = Quaternion.Euler(0f, 324f, 0f);
            shape.transform.localScale = new Vector3(8.931349f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.236422f, -3.4791903f, -5.793316f);
            shape.transform.rotation = Quaternion.Euler(0f, 312f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.9174957f, -3.4791903f, -6.755431f);
            shape.transform.rotation = Quaternion.Euler(0f, 300f, 0f);
            shape.transform.localScale = new Vector3(8.931349f, 4.98537f, 2.5831103f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.427356f, -3.4791903f, -7.4223022f);
            shape.transform.rotation = Quaternion.Euler(0f, 288f, 0f);
            shape.transform.localScale = new Vector3(8.931349f, 4.98537f, 2.5831099f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.83112895f, -3.4791903f, -7.7647834f);
            shape.transform.rotation = Quaternion.Euler(0f, 276f, 0f);
            shape.transform.localScale = new Vector3(8.931349f, 4.98537f, 2.5831106f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.8014225f, -3.4791903f, -7.7679057f);
            shape.transform.rotation = Quaternion.Euler(0f, 264f, 0f);
            shape.transform.localScale = new Vector3(8.931349f, 4.98537f, 2.5831106f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.398948f, -3.4791903f, -7.4315333f);
            shape.transform.rotation = Quaternion.Euler(0f, 252f, 0f);
            shape.transform.localScale = new Vector3(8.931349f, 4.98537f, 2.5831094f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.8916278f, -3.4791903f, -6.7703676f);
            shape.transform.rotation = Quaternion.Euler(0f, 240f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.2142253f, -3.4791903f, -5.813304f);
            shape.transform.rotation = Quaternion.Euler(0f, 228f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.308936f, -3.4791903f, -4.602171f);
            shape.transform.rotation = Quaternion.Euler(0f, 216f, 0f);
            shape.transform.localScale = new Vector3(8.931349f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.1279163f, -3.4791903f, -3.1899009f);
            shape.transform.rotation = Quaternion.Euler(0f, 204f, 0f);
            shape.transform.localScale = new Vector3(8.931348f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.635372f, -3.4791903f, -1.6382167f);
            shape.transform.rotation = Quaternion.Euler(0f, 192f, 0f);
            shape.transform.localScale = new Vector3(8.931349f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.8091254f, -3.4791903f, -0.014934659f);
            shape.transform.rotation = Quaternion.Euler(-0f, 179.99998f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.6415825f, -3.4791903f, 1.6090003f);
            shape.transform.rotation = Quaternion.Euler(-0f, 167.99997f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.5831094f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.1400657f, -3.4791903f, 3.1626143f);
            shape.transform.rotation = Quaternion.Euler(-0f, 155.99995f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.3264937f, -3.4791903f, 4.5780067f);
            shape.transform.rotation = Quaternion.Euler(-0f, 143.99994f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.2364235f, -3.4791903f, 5.7933183f);
            shape.transform.rotation = Quaternion.Euler(-0f, 131.99992f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.9174962f, -3.4791903f, 6.755434f);
            shape.transform.rotation = Quaternion.Euler(-0f, 119.99991f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.4273558f, -3.4791903f, 7.422305f);
            shape.transform.rotation = Quaternion.Euler(-0f, 107.9999f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.8311281f, -3.4791903f, 7.764786f);
            shape.transform.rotation = Quaternion.Euler(-0f, 95.999886f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.5831096f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.8014238f, -3.4791903f, 7.767908f);
            shape.transform.rotation = Quaternion.Euler(-0f, 83.99987f, -0f);
            shape.transform.localScale = new Vector3(8.931347f, 4.98537f, 2.5831099f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.3989496f, -3.4791903f, 7.4315352f);
            shape.transform.rotation = Quaternion.Euler(-0f, 71.999855f, -0f);
            shape.transform.localScale = new Vector3(8.931347f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.89163f, -3.4791903f, 6.7703686f);
            shape.transform.rotation = Quaternion.Euler(-0f, 59.99984f, -0f);
            shape.transform.localScale = new Vector3(8.931353f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.2142277f, -3.4791903f, 5.8133044f);
            shape.transform.rotation = Quaternion.Euler(-0f, 47.99983f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 4.98537f, 2.5831094f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.3089385f, -3.4791903f, 4.602171f);
            shape.transform.rotation = Quaternion.Euler(-0f, 35.99982f, -0f);
            shape.transform.localScale = new Vector3(8.931351f, 4.98537f, 2.5831103f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.1279187f, -3.4791903f, 3.1899004f);
            shape.transform.rotation = Quaternion.Euler(-0f, 23.9998f, -0f);
            shape.transform.localScale = new Vector3(8.931349f, 4.98537f, 2.5831106f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            shape.GetComponent<Renderer>().material.shader = urp;
            shape.GetComponent<Renderer>().material.color = new Color(1f, 0.32542837f, 0.20694181f);
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.6353745f, -3.4791903f, 1.6382158f);
            shape.transform.rotation = Quaternion.Euler(-0f, 11.999789f, -0f);
            shape.transform.localScale = new Vector3(8.931348f, 4.98537f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.8166666f, -0.97f, 0f);
            shape.transform.rotation = Quaternion.Euler(-0f, 0f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.645854f, -0.97f, -1.6251764f);
            shape.transform.rotation = Quaternion.Euler(0f, 348f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.1400633f, -0.97f, -3.1626124f);
            shape.transform.rotation = Quaternion.Euler(0f, 336f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.326492f, -0.97f, -4.5780044f);
            shape.transform.rotation = Quaternion.Euler(0f, 324f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.236422f, -0.97f, -5.793316f);
            shape.transform.rotation = Quaternion.Euler(0f, 312f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.9174957f, -0.97f, -6.755431f);
            shape.transform.rotation = Quaternion.Euler(0f, 300f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.427356f, -0.97f, -7.4223022f);
            shape.transform.rotation = Quaternion.Euler(0f, 288f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.83112895f, -0.97f, -7.7647834f);
            shape.transform.rotation = Quaternion.Euler(0f, 276f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.8014225f, -0.97f, -7.7679057f);
            shape.transform.rotation = Quaternion.Euler(0f, 264f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.398948f, -0.97f, -7.4315333f);
            shape.transform.rotation = Quaternion.Euler(0f, 252f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.8916278f, -0.97f, -6.7703676f);
            shape.transform.rotation = Quaternion.Euler(0f, 240f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.2142253f, -0.97f, -5.813304f);
            shape.transform.rotation = Quaternion.Euler(0f, 228f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.308936f, -0.97f, -4.602171f);
            shape.transform.rotation = Quaternion.Euler(0f, 216f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.1279163f, -0.97f, -3.1899009f);
            shape.transform.rotation = Quaternion.Euler(0f, 204f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.635372f, -0.97f, -1.6382167f);
            shape.transform.rotation = Quaternion.Euler(0f, 192f, 0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.8091254f, -0.97f, -0.014934659f);
            shape.transform.rotation = Quaternion.Euler(-0f, 179.99998f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.6415825f, -0.97f, 1.6090003f);
            shape.transform.rotation = Quaternion.Euler(-0f, 167.99997f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(7.1400657f, -0.97f, 3.1626143f);
            shape.transform.rotation = Quaternion.Euler(-0f, 155.99995f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(6.3264937f, -0.97f, 4.5780067f);
            shape.transform.rotation = Quaternion.Euler(-0f, 143.99994f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(5.2364235f, -0.97f, 5.7933183f);
            shape.transform.rotation = Quaternion.Euler(-0f, 131.99992f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(3.9174962f, -0.97f, 6.755434f);
            shape.transform.rotation = Quaternion.Euler(-0f, 119.99991f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(2.4273558f, -0.97f, 7.422305f);
            shape.transform.rotation = Quaternion.Euler(-0f, 107.9999f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(0.8311281f, -0.97f, 7.764786f);
            shape.transform.rotation = Quaternion.Euler(-0f, 95.999886f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-0.8014238f, -0.97f, 7.767908f);
            shape.transform.rotation = Quaternion.Euler(-0f, 83.99987f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-2.3989496f, -0.97f, 7.4315352f);
            shape.transform.rotation = Quaternion.Euler(-0f, 71.999855f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-3.89163f, -0.97f, 6.7703686f);
            shape.transform.rotation = Quaternion.Euler(-0f, 59.999844f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-5.2142277f, -0.97f, 5.8133044f);
            shape.transform.rotation = Quaternion.Euler(-0f, 47.99983f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-6.3089385f, -0.97f, 4.602171f);
            shape.transform.rotation = Quaternion.Euler(-0f, 35.99982f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.1279187f, -0.97f, 3.1899004f);
            shape.transform.rotation = Quaternion.Euler(-0f, 23.9998f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            shape = GameObject.CreatePrimitive(PrimitiveType.Cube);
            shape.name = "Cube(Invisible)";
            Component.Destroy(shape.GetComponent<BoxCollider>());
            Component.Destroy(shape.GetComponent<MeshRenderer>());
            shape.layer = 9;
            shape.transform.parent = mapParent.transform;
            shape.transform.position = new Vector3(-7.6353745f, -0.97f, 1.6382158f);
            shape.transform.rotation = Quaternion.Euler(-0f, 11.999789f, -0f);
            shape.transform.localScale = new Vector3(8.93135f, 0.027901676f, 2.58311f);
            meshCollider = shape.AddComponent<MeshCollider>();
            groundCollider = shape.AddComponent<GroundCollider>();
            groundCollider.isMainGroundCollider = true;
            groundCollider.collider = meshCollider;
            mapParent.SetActive(false);
        }
    }
}
